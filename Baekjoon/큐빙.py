"""
큐빙
https://www.acmicpc.net/problem/5373
"""

def UP(clock) :
    # 시계방향 : B -> R -> F -> L
    if clock :
        # 시계방향으로 돌리기
        a1, a2, a3 = U[0][0], U[0][1], U[0][2]
        U[0][2], U[1][2], U[2][2], a1, a2, a3 = a1, a2, a3, U[0][2], U[1][2], U[2][2]
        U[2][2], U[2][1], U[2][0], a1, a2, a3 = a1, a2, a3, U[2][2], U[2][1], U[2][0]
        U[2][0], U[1][0], U[0][0], a1, a2, a3 = a1, a2, a3, U[2][0], U[1][0], U[0][0]
        U[0][0], U[0][1], U[0][2] = a1, a2, a3

        tmp = B[0]
        R[0], tmp = tmp, R[0]
        F[0], tmp = tmp, F[0]
        L[0], tmp = tmp, L[0]
        B[0] = tmp
    # 반시계방향 : B -> L -> F -> R
    else :
        # 반시계방향으로 돌리기
        a1, a2, a3 = U[0][0], U[0][1], U[0][2]
        U[2][0], U[1][0], U[0][0], a1, a2, a3 = a1, a2, a3, U[2][0], U[1][0], U[0][0]
        U[2][2], U[2][1], U[2][0], a1, a2, a3 = a1, a2, a3, U[2][2], U[2][1], U[2][0]
        U[0][2], U[1][2], U[2][2], a1, a2, a3 = a1, a2, a3, U[0][2], U[1][2], U[2][2]
        U[0][0], U[0][1], U[0][2] = a1, a2, a3

        tmp = B[0]
        L[0], tmp = tmp, L[0]
        F[0], tmp = tmp, F[0]
        R[0], tmp = tmp, R[0]
        B[0] = tmp

def Down(clock) :
    # 시계방향 : B -> L -> F -> R
    if clock :
        # 시계방향으로 돌리기
        a1, a2, a3 = D[0][0], D[0][1], D[0][2]
        D[0][2], D[1][2], D[2][2], a1, a2, a3 = a1, a2, a3, D[0][2], D[1][2], D[2][2]
        D[2][2], D[2][1], D[2][0], a1, a2, a3 = a1, a2, a3, D[2][2], D[2][1], D[2][0]
        D[2][0], D[1][0], D[0][0], a1, a2, a3 = a1, a2, a3, D[2][0], D[1][0], D[0][0]
        D[0][0], D[0][1], D[0][2] = a1, a2, a3

        tmp = B[-1]
        L[-1], tmp = tmp, L[-1]
        F[-1], tmp = tmp, F[-1]
        R[-1], tmp = tmp, R[-1]
        B[-1] = tmp
    # 반시계방향 : B -> R -> F -> L
    else :
        # 반시계방향으로 돌리기
        a1, a2, a3 = D[0][0], D[0][1], D[0][2]
        D[2][0], D[1][0], D[0][0], a1, a2, a3 = a1, a2, a3, D[2][0], D[1][0], D[0][0]
        D[2][2], D[2][1], D[2][0], a1, a2, a3 = a1, a2, a3, D[2][2], D[2][1], D[2][0]
        D[0][2], D[1][2], D[2][2], a1, a2, a3 = a1, a2, a3, D[0][2], D[1][2], D[2][2]
        D[0][0], D[0][1], D[0][2] = a1, a2, a3


        tmp = B[-1]
        R[-1], tmp = tmp, R[-1]
        F[-1], tmp = tmp, F[-1]
        L[-1], tmp = tmp, L[-1]
        B[-1] = tmp

def Front(clock) :
    # 시계방향 : U -> R -> D -> L
    if clock :
        # 시계방향으로 돌리기
        a1, a2, a3 = F[0][0], F[0][1], F[0][2]
        F[0][2], F[1][2], F[2][2], a1, a2, a3 = a1, a2, a3, F[0][2], F[1][2], F[2][2]
        F[2][2], F[2][1], F[2][0], a1, a2, a3 = a1, a2, a3, F[2][2], F[2][1], F[2][0]
        F[2][0], F[1][0], F[0][0], a1, a2, a3 = a1, a2, a3, F[2][0], F[1][0], F[0][0]
        F[0][0], F[0][1], F[0][2] = a1, a2, a3

        a1, a2, a3 = U[2][0], U[2][1], U[2][2]
        R[0][0], R[1][0], R[2][0], a1, a2, a3 = a1, a2, a3, R[0][0], R[1][0], R[2][0]
        D[0][0], D[0][1], D[0][2], a1, a2, a3 = a3, a2, a1, D[0][0], D[0][1], D[0][2]
        L[0][2], L[1][2], L[2][2], a1, a2, a3 = a1, a2, a3, L[0][2], L[1][2], L[2][2]
        U[2][0], U[2][1], U[2][2] = a3, a2, a1
    # 반시계방향 : U -> L -> D -> R
    else :
        # 반시계방향으로 돌리기
        a1, a2, a3 = F[0][0], F[0][1], F[0][2]
        F[2][0], F[1][0], F[0][0], a1, a2, a3 = a1, a2, a3, F[2][0], F[1][0], F[0][0]
        F[2][2], F[2][1], F[2][0], a1, a2, a3 = a1, a2, a3, F[2][2], F[2][1], F[2][0]
        F[0][2], F[1][2], F[2][2], a1, a2, a3 = a1, a2, a3, F[0][2], F[1][2], F[2][2]
        F[0][0], F[0][1], F[0][2] = a1, a2, a3

        a1, a2, a3 = U[2][0], U[2][1], U[2][2]
        L[0][2], L[1][2], L[2][2], a1, a2, a3 = a3, a2, a1, L[0][2], L[1][2], L[2][2]
        D[0][0], D[0][1], D[0][2], a1, a2, a3 = a1, a2, a3, D[0][0], D[0][1], D[0][2]
        R[0][0], R[1][0], R[2][0], a1, a2, a3 = a3, a2, a1, R[0][0], R[1][0], R[2][0]
        U[2][0], U[2][1], U[2][2] = a1, a2, a3

def Back(clock) :
    # 시계방향 : U -> L -> D -> R
    if clock :
        # 시계방향으로 돌리기
        a1, a2, a3 = B[0][0], B[0][1], B[0][2]
        B[0][2], B[1][2], B[2][2], a1, a2, a3 = a1, a2, a3, B[0][2], B[1][2], B[2][2]
        B[2][2], B[2][1], B[2][0], a1, a2, a3 = a1, a2, a3, B[2][2], B[2][1], B[2][0]
        B[2][0], B[1][0], B[0][0], a1, a2, a3 = a1, a2, a3, B[2][0], B[1][0], B[0][0]
        B[0][0], B[0][1], B[0][2] = a1, a2, a3

        a1, a2, a3 = U[0][0], U[0][1], U[0][2]
        L[0][0], L[1][0], L[2][0], a1, a2, a3 = a3, a2, a1, L[0][0], L[1][0], L[2][0]
        D[2][0], D[2][1], D[2][2], a1, a2, a3 = a1, a2, a3, D[2][0], D[2][1], D[2][2]
        R[0][2], R[1][2], R[2][2], a1, a2, a3 = a3, a2, a1, R[0][2], R[1][2], R[2][2]
        U[0][0], U[0][1], U[0][2] = a1, a2, a3
    # 반시계방향 : U -> R -> D -> L
    else :# 반시계방향으로 돌리기
        a1, a2, a3 = B[0][0], B[0][1], B[0][2]
        B[2][0], B[1][0], B[0][0], a1, a2, a3 = a1, a2, a3, B[2][0], B[1][0], B[0][0]
        B[2][2], B[2][1], B[2][0], a1, a2, a3 = a1, a2, a3, B[2][2], B[2][1], B[2][0]
        B[0][2], B[1][2], B[2][2], a1, a2, a3 = a1, a2, a3, B[0][2], B[1][2], B[2][2]
        B[0][0], B[0][1], B[0][2] = a1, a2, a3

        a1, a2, a3 = U[0][0], U[0][1], U[0][2]
        R[0][2], R[1][2], R[2][2], a1, a2, a3 = a1, a2, a3, R[0][2], R[1][2], R[2][2]
        D[2][0], D[2][1], D[2][2], a1, a2, a3 = a3, a2, a1, D[2][0], D[2][1], D[2][2]
        L[0][0], L[1][0], L[2][0], a1, a2, a3 = a1, a2, a3, L[0][0], L[1][0], L[2][0]
        U[0][0], U[0][1], U[0][2] = a3, a2, a1

def Right(clock) :
    # 시계방향 : U -> B -> D -> F
    if clock :
        # 시계방향으로 돌리기
        a1, a2, a3 = R[0][0], R[0][1], R[0][2]
        R[0][2], R[1][2], R[2][2], a1, a2, a3 = a1, a2, a3, R[0][2], R[1][2], R[2][2]
        R[2][2], R[2][1], R[2][0], a1, a2, a3 = a1, a2, a3, R[2][2], R[2][1], R[2][0]
        R[2][0], R[1][0], R[0][0], a1, a2, a3 = a1, a2, a3, R[2][0], R[1][0], R[0][0]
        R[0][0], R[0][1], R[0][2] = a1, a2, a3

        a1, a2, a3 = U[2][2], U[1][2], U[0][2]
        B[0][0], B[1][0], B[2][0], a1, a2, a3 = a1, a2, a3, B[0][0], B[1][0], B[2][0]
        D[0][2], D[1][2], D[2][2], a1, a2, a3 = a3, a2, a1, D[0][2], D[1][2], D[2][2]
        F[0][2], F[1][2], F[2][2], a1, a2, a3 = a1, a2, a3, F[0][2], F[1][2], F[2][2]
        U[2][2], U[1][2], U[0][2] = a3, a2, a1
    # 반시계방향 : U -> F -> B -> D
    else :
        # 반시계방향으로 돌리기
        a1, a2, a3 = R[0][0], R[0][1], R[0][2]
        R[2][0], R[1][0], R[0][0], a1, a2, a3 = a1, a2, a3, R[2][0], R[1][0], R[0][0]
        R[2][2], R[2][1], R[2][0], a1, a2, a3 = a1, a2, a3, R[2][2], R[2][1], R[2][0]
        R[0][2], R[1][2], R[2][2], a1, a2, a3 = a1, a2, a3, R[0][2], R[1][2], R[2][2]
        R[0][0], R[0][1], R[0][2] = a1, a2, a3

        a1, a2, a3 = U[2][2], U[1][2], U[0][2]
        F[0][2], F[1][2], F[2][2], a1, a2, a3 = a3, a2, a1, F[0][2], F[1][2], F[2][2]
        D[0][2], D[1][2], D[2][2], a1, a2, a3 = a1, a2, a3, D[0][2], D[1][2], D[2][2]
        B[0][0], B[1][0], B[2][0], a1, a2, a3 = a3, a2, a1, B[0][0], B[1][0], B[2][0]
        U[2][2], U[1][2], U[0][2] = a1, a2, a3

def Left(clock) :
    # 시계방향 : U -> F -> D -> B
    if clock :
        # 시계방향으로 돌리기
        a1, a2, a3 = L[0][0], L[0][1], L[0][2]
        L[0][2], L[1][2], L[2][2], a1, a2, a3 = a1, a2, a3, L[0][2], L[1][2], L[2][2]
        L[2][2], L[2][1], L[2][0], a1, a2, a3 = a1, a2, a3, L[2][2], L[2][1], L[2][0]
        L[2][0], L[1][0], L[0][0], a1, a2, a3 = a1, a2, a3, L[2][0], L[1][0], L[0][0]
        L[0][0], L[0][1], L[0][2] = a1, a2, a3

        a1, a2, a3 = U[0][0], U[1][0], U[2][0]
        F[0][0], F[1][0], F[2][0], a1, a2, a3 = a1, a2, a3, F[0][0], F[1][0], F[2][0]
        D[2][0], D[1][0], D[0][0], a1, a2, a3 = a3, a2, a1, D[2][0], D[1][0], D[0][0]
        B[0][2], B[1][2], B[2][2], a1, a2, a3 = a1, a2, a3, B[0][2], B[1][2], B[2][2]
        U[0][0], U[1][0], U[2][0] = a3, a2, a1

    # 반시계방향 : U -> B -> D -> F
    else :
        # 반시계방향으로 돌리기
        a1, a2, a3 = L[0][0], L[0][1], L[0][2]
        L[2][0], L[1][0], L[0][0], a1, a2, a3 = a1, a2, a3, L[2][0], L[1][0], L[0][0]
        L[2][2], L[2][1], L[2][0], a1, a2, a3 = a1, a2, a3, L[2][2], L[2][1], L[2][0]
        L[0][2], L[1][2], L[2][2], a1, a2, a3 = a1, a2, a3, L[0][2], L[1][2], L[2][2]
        L[0][0], L[0][1], L[0][2] = a1, a2, a3

        a1, a2, a3 = U[0][0], U[1][0], U[2][0]
        B[0][2], B[1][2], B[2][2], a1, a2, a3 = a3, a2, a1, B[0][2], B[1][2], B[2][2]
        D[2][0], D[1][0], D[0][0], a1, a2, a3 = a1, a2, a3, D[2][0], D[1][0], D[0][0]
        F[0][0], F[1][0], F[2][0], a1, a2, a3 = a3, a2, a1, F[0][0], F[1][0], F[2][0]
        U[0][0], U[1][0], U[2][0] = a1, a2, a3

T = int(input())
for _ in range(T) :

    U = [['w']*3 for _ in range(3)]
    D = [['y']*3 for _ in range(3)]
    F = [['r']*3 for _ in range(3)]
    B = [['o']*3 for _ in range(3)]
    L = [['g']*3 for _ in range(3)]
    R = [['b']*3 for _ in range(3)]

    n = input()
    order = input().split()
    for o in order :
        if o == "U+" :
            UP(True)
        elif o == "U-" :
            UP(False)
        elif o == "D+" :
            Down(True)
        elif o == "D-" :
            Down(False)
        elif o == "F+" :
            Front(True)
        elif o == "F-" :
            Front(False)
        elif o == "B+" :
            Back(True)
        elif o == "B-" :
            Back(False)
        elif o == "R+" :
            Right(True)
        elif o == "R-" :
            Right(False)
        elif o == "L+" :
            Left(True)
        elif o == "L-" :
            Left(False)


    for i in range(3) :
        print("".join(U[i]))



